[["abundance.html", "Chapter 3 Abundance", " Chapter 3 Abundance Here is a review of existing methods. 3.0.1 Model Description 3.0.2 Algebra \\[\\hat{N} = \\frac{M_{t+1}}{1-\\prod^{t}(1-p_t)}\\] \\[y_{i,t} \\sim Bernoulli(p_t) \\] 3.0.3 Simulation N &lt;- 150 #True population size n_occ &lt;- 4 #Number of trapping occasions p &lt;- 0.50 #Probability of first detection true_detections &lt;- array(NA, dim=c(N,n_occ)) for (t in 1:n_occ){ true_detections[,t] &lt;- rbinom(n=N,size=1,prob=p) } observed &lt;- true_detections[apply(true_detections,1,max) == 1,] MNKA &lt;- nrow(observed) print( paste0(&quot;Number ever detected: &quot;, MNKA,sep = &quot; &quot;) ) #number ever detected ## [1] &quot;Number ever detected: 140 &quot; 3.0.4 JAGS library(R2jags) data &lt;- list( y=observed, nsites=nrow(observed), MNKA=MNKA, n_occ=n_occ ) modelstring &lt;- textConnection( &quot; model { # Likelihood for(i in 1:nsites) { # observation model for(j in 1:4) { y[i, j] ~ dbern(p) } } for(t in 1:4){ p_un[t] &lt;- (1-p) } # Priors p ~ dunif(0, 1) # Uninformative prior # Derived values N &lt;- (MNKA / (1-prod(p_un[]))) } &quot; ) parameters &lt;- c(&quot;p&quot;,&quot;N&quot;) inits &lt;- function() { list( ) } ni &lt;- 10000 ; nt &lt;- 1 ; nb &lt;- 5000 ; nc &lt;- 3 model &lt;- jags(data, inits, parameters, modelstring, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb) library(knitr) kable(round(model$BUGSoutput$summary[c(1,3),c(1,2,3,7,8,9)],2)) mean sd 2.5% 97.5% Rhat n.eff N 148.21 1.35 145.85 151.19 1 15000 p 0.53 0.02 0.49 0.57 1 15000 3.0.4.1 Stan library(rstan) data &lt;- list( y=observed, nsites=nrow(observed), MNKA=MNKA, n_occ=n_occ ) stan_model &lt;- &quot; data { int&lt;lower=0&gt; MNKA; int&lt;lower=0&gt; nsites; int&lt;lower=0&gt; n_occ; int&lt;lower=0,upper=1&gt; y[MNKA, n_occ]; } parameters { real&lt;lower=0, upper=1&gt; p; } model { for(i in 1:nsites) for(j in 1:4) y[i, j] ~ bernoulli_lpmf(p); } generated quantities { real N = MNKA / (1-(1-p)^4); } &quot; nc &lt;- 4 stan.samples &lt;- stan(model_code = stan_model, data = data, iter = 10000, chains = nc, cores = nc) library(knitr) kable(round(summary(stan.samples)$summary[c(2,1),c(1,2,3,4,8,10,9)],2)) mean se_mean sd 2.5% 97.5% Rhat n_eff N 152.46 0.02 1.39 150.04 155.45 1 7412.46 p 0.53 0.00 0.02 0.49 0.57 1 7340.89 3.0.4.2 Comparison "]]
